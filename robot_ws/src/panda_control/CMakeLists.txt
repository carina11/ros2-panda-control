cmake_minimum_required(VERSION 3.8)
project(panda_control)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

find_package(rclcpp REQUIRED)
find_package(rclpy REQUIRED)
find_package(std_msgs REQUIRED)
find_package(geometry_msgs)
find_package(moveit_ros_planning_interface)

add_executable(simple_control_server src/simple_control_server.cpp)
ament_target_dependencies(simple_control_server rclcpp std_msgs moveit_ros_planning_interface geometry_msgs)
# add_executable(arm_pose_publisher src/arm_pose_publisher.cpp)
# ament_target_dependencies(arm_pose_publisher rclcpp std_msgs moveit_ros_planning_interface geometry_msgs)

install(TARGETS
  simple_control_server
#   arm_pose_publisher
  DESTINATION lib/${PROJECT_NAME})

# install(
#   PROGRAMS
#     follow_face/control.py
#   DESTINATION lib/${PROJECT_NAME}
# )

# Install launch files
install(
  DIRECTORY launch/
  DESTINATION share/${PROJECT_NAME}/launch
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()